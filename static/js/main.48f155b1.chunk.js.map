{"version":3,"sources":["serviceWorker.js","components/Header/Header.js","components/AllCharacterScreen/CharacterCard.js","components/AllCharacterScreen/CharacterCardAlt.js","search.jpg","components/AllCharacterScreen/AllCharacterScreen.js","components/SearchPage/SearchPage.js","components/CharacterScreen/CharacterScreen.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Header","classes","history","useHistory","useState","setsearch","className","AppBar","Toolbar","Typography","variant","noWrap","onClick","push","InputBase","onSubmit","console","log","placeholder","input","value","onChange","e","target","inputProps","Button","style","pathname","state","maxWidth","details","flexDirection","cover","CharacterCard","character","Card","elevation","CardContent","content","align","name","occupation","birthday","status","to","CardMedia","image","img","CharacterCardAlt","useStyle","margin","AllCharacterScreen","props","characters","setcharacters","loading","setloading","page","setpage","getCharacters","a","axios","get","then","response","data","catch","error","useEffect","CircularProgress","marginTop","size","Container","length","src","nosearch","alt","map","c","idx","char_id","Pagination","count","event","scrollTo","top","left","behavior","SearchPage","avatar","info","CharacterScreen","quote","setquote","res","l","max","Math","floor","random","getRandom","err","Avatar","o","i","category","nickname","portrayed","routing","StrictMode","path","exact","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.48f155b1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { alpha, makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Button } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n    cursor: \"pointer\",\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [search, setsearch] = useState(\"\");\n\n  const handleChange = (e) => {\n    setsearch(e.target.value);\n  };\n\n  const handleClick = () => {\n    // setsearch(\"\");\n    console.log(\"okk\");\n    history.push({\n      pathname: \"/search\",\n      state: { search: search },\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography\n            className={classes.title}\n            variant=\"h6\"\n            noWrap\n            onClick={() => history.push(\"/\")}\n          >\n            Breaking Bad Expo\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              onSubmit={() => console.log(\"check\")}\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              value={search}\n              onChange={handleChange}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{ marginLeft: \"20px\" }}\n            className={classes.menuButton}\n            onClick={handleClick}\n          >\n            Search\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: \"90%\",\n    padding: \"20px\",\n    display: \"flex\",\n  },\n  details: {\n    width: \"100%\",\n    flexDirection: \"column\",\n  },\n  cover: {\n    width: 151,\n  },\n}));\n\nfunction CharacterCard({ character }) {\n  const classes = useStyles();\n\n  return (\n    <center>\n      <Card className={classes.root} elevation={5}>\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <Typography variant=\"h6\" align=\"left\">\n              <b>Name:</b> {character.name}\n            </Typography>\n            <Typography variant=\"h6\" align=\"left\">\n              <b>Occupation:</b> {character.occupation}\n            </Typography>\n            <Typography variant=\"h6\" align=\"left\">\n              <b>DOB:</b> {character.birthday}\n            </Typography>\n            <Typography variant=\"h6\" align=\"left\">\n              <b>Status:</b> {character.status}\n            </Typography>\n            <Link\n              to={{\n                pathname: \"/character\",\n                state: { character: character },\n              }}\n            >\n              <Typography variant=\"body2\" align=\"left\">\n                View Details\n              </Typography>\n            </Link>\n          </CardContent>\n        </div>\n        <CardMedia\n          className={classes.cover}\n          image={character.img}\n          title=\"Live from space album cover\"\n        />\n      </Card>\n      <br />\n    </center>\n  );\n}\n\nexport default CharacterCard;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: \"90%\",\n    padding: \"20px\",\n    display: \"flex\",\n  },\n  details: {\n    width: \"100%\",\n    flexDirection: \"column\",\n  },\n  cover: {\n    width: 151,\n  },\n}));\n\nfunction CharacterCardAlt({ character }) {\n  const classes = useStyles();\n  return (\n    <center>\n      <Card className={classes.root} elevation={5}>\n        <CardMedia\n          className={classes.cover}\n          image={character.img}\n          title=\"Live from space album cover\"\n        />\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <Typography variant=\"h6\" align=\"right\">\n              <b>Name:</b> {character.name}\n            </Typography>\n            <Typography variant=\"h6\" align=\"right\">\n              <b>Occupation:</b> {character.occupation}\n            </Typography>\n            <Typography variant=\"h6\" align=\"right\">\n              <b>DOB:</b> {character.birthday}\n            </Typography>\n            <Typography variant=\"h6\" align=\"right\">\n              <b>Status:</b> {character.status}\n            </Typography>\n            <Link\n              to={{\n                pathname: \"/character\",\n                state: { character: character },\n              }}\n            >\n              <Typography variant=\"body2\" align=\"right\">\n                View Details\n              </Typography>\n            </Link>\n          </CardContent>\n        </div>\n      </Card>\n      <br />\n    </center>\n  );\n}\n\nexport default CharacterCardAlt;\n","export default __webpack_public_path__ + \"static/media/search.09cde79f.jpg\";","import { Container, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../Header/Header\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CharacterCard from \"./CharacterCard\";\nimport CharacterCardAlt from \"./CharacterCardAlt\";\nimport axios from \"axios\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport nosearch from \"../../search.jpg\";\n\nimport \"./index.css\";\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(2),\n  },\n}));\n\nfunction AllCharacterScreen(props) {\n  const classes = useStyle();\n  const [characters, setcharacters] = useState([]);\n  const [loading, setloading] = useState(false);\n  const [page, setpage] = useState(1);\n\n  const handleClick = (event, page) => {\n    console.log(page);\n    setpage(page);\n    getCharacters(page - 1);\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  };\n\n  const getCharacters = async (page) => {\n    setloading(true);\n    axios\n      .get(\n        `https://www.breakingbadapi.com/api/characters/?limit=10&offset=${\n          10 * page\n        }`\n      )\n      .then((response) => {\n        console.log(response.data);\n        setcharacters(response.data);\n        setloading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n        setloading(false);\n      });\n  };\n\n  useEffect(() => {\n    getCharacters(0);\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <div className={classes.root}>\n        {loading ? (\n          <center>\n            <br />\n            <CircularProgress style={{ marginTop: \"50vh\" }} size=\"100px\" />\n            <br />\n            <br />\n          </center>\n        ) : (\n          <Container>\n            <Typography variant=\"h4\">All Characters</Typography>\n            <br />\n            {characters.length === 0 ? (\n              <center>\n                <img src={nosearch} alt=\"ff\" />\n              </center>\n            ) : (\n              characters.map((c, idx) => {\n                return idx % 2 === 0 ? (\n                  <CharacterCard key={c.char_id} character={c} />\n                ) : (\n                  <CharacterCardAlt key={c.char_id} character={c} />\n                );\n              })\n            )}\n            <br />\n            <Pagination\n              count={7}\n              page={page}\n              // defaultPage={1}\n              color=\"primary\"\n              style={{ justifyContent: \"center\" }}\n              onChange={handleClick}\n            />\n          </Container>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default AllCharacterScreen;\n","import { Container, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../Header/Header\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CharacterCard from \"../AllCharacterScreen/CharacterCard\";\nimport CharacterCardAlt from \"../AllCharacterScreen/CharacterCardAlt\";\nimport axios from \"axios\";\nimport nosearch from \"../../search.jpg\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(2),\n  },\n}));\n\nfunction SearchPage(props) {\n  const classes = useStyle();\n  const [characters, setcharacters] = useState([]);\n  const [loading, setloading] = useState(false);\n  const search = props.location.state?.search ?? \"\";\n\n  useEffect(() => {\n    setloading(true);\n    axios\n      .get(\n        `https://www.breakingbadapi.com/api/characters/?name=${search}&&limit=10`\n      )\n      .then((response) => {\n        console.log(response.data);\n        setcharacters(response.data);\n        setloading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n        setloading(false);\n      });\n  }, [search]);\n\n  return (\n    <>\n      <Header />\n      <div className={classes.root}>\n        {loading ? (\n          <center>\n            <br />\n            <CircularProgress style={{ marginTop: \"50vh\" }} size=\"100px\" />\n            <br />\n            <br />\n          </center>\n        ) : (\n          <Container>\n            <Typography variant=\"h4\">Search Result for: {search}</Typography>\n            <br />\n            {characters.length === 0 ? (\n              <center>\n                <img src={nosearch} alt=\"ff\" />\n              </center>\n            ) : (\n              characters.map((c, idx) => {\n                return idx % 2 === 0 ? (\n                  <CharacterCard key={c.char_id} character={c} />\n                ) : (\n                  <CharacterCardAlt key={c.char_id} character={c} />\n                );\n              })\n            )}\n            <br />\n          </Container>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default SearchPage;\n","import { Avatar, Container, makeStyles, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../Header/Header\";\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(2),\n  },\n  avatar: {\n    height: \"200px\",\n    width: \"200px\",\n  },\n  info: {\n    padding: \"20px 10px\",\n  },\n}));\n\nfunction CharacterScreen(props) {\n  const classes = useStyle();\n  const c = props.location.state?.character ?? {};\n  console.log(c);\n  const [quote, setquote] = useState(\"\");\n\n  const getRandom = (l) => {\n    const min = 0;\n    const max = l - 1;\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\n    return random;\n  };\n\n  useEffect(() => {\n    axios\n      .get(`https://www.breakingbadapi.com/api/quote?author=${c.name}`)\n      .then((res) => {\n        setquote(res.data[getRandom(res.data.length)].quote);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [c.name]);\n\n  return (\n    <>\n      <Header />\n      <div className={classes.root}>\n        <Container>\n          <br />\n          <br />\n          <center>\n            <Avatar alt=\"Remy Sharp\" src={c.img} className={classes.avatar} />\n          </center>\n          <br />\n          <br />\n          <br />\n          <br />\n          <Typography variant=\"h4\" className={classes.info}>\n            <b>Name: </b> {c.name}\n          </Typography>\n          <Typography variant=\"h4\" className={classes.info}>\n            <b>Birthday: </b> {c.birthday}\n          </Typography>\n          <Typography variant=\"h4\" className={classes.info}>\n            <b>Occupation: </b>\n            <ul style={{ margin: 0, paddingLeft: \"150px\" }}>\n              {c.occupation.map((o, i) => (\n                <li key={i}>{o}</li>\n              ))}\n            </ul>\n          </Typography>\n          <Typography variant=\"h4\" className={classes.info}>\n            <b>Category: </b>\n            {c.category}\n          </Typography>\n          <Typography variant=\"h4\" className={classes.info}>\n            <b>Status: </b>\n            {c.status}\n          </Typography>\n          <Typography variant=\"h4\" className={classes.info}>\n            <b>Nickname: </b>\n            {c.nickname}\n          </Typography>\n          <Typography variant=\"h4\" className={classes.info}>\n            <b>Portrayed: </b>\n            {c.portrayed}\n          </Typography>\n          <Typography variant=\"h4\" className={classes.info}>\n            <b>Quote: </b>\n            {quote}\n          </Typography>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default CharacterScreen;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport AllCharacterScreen from \"./components/AllCharacterScreen/AllCharacterScreen\";\nimport SearchPage from \"./components/SearchPage/SearchPage\";\nimport CharacterScreen from \"./components/CharacterScreen/CharacterScreen\";\n\nconst routing = (\n  <Router>\n    <React.StrictMode>\n      <Switch>\n        <Route path=\"/\" exact component={AllCharacterScreen} />\n        <Route path=\"/search\" exact component={SearchPage} />\n        <Route path=\"/character\" exact component={CharacterScreen} />\n      </Switch>\n    </React.StrictMode>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}